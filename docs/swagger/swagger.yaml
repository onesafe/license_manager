basePath: /license-manager/v1
definitions:
  utils.Response:
    properties:
      baseStatus:
        type: string
      data:
        type: object
      msg:
        type: string
      status:
        type: string
    type: object
  views.DasLicense:
    properties:
      DiDiExpiredDate:
        type: integer
      expiredDate:
        type: integer
      issuedDate:
        type: integer
      maxCpuCores:
        type: integer
      maxMemoryBytes:
        type: integer
      product:
        type: string
      versionsSupported:
        items:
          type: string
        type: array
    type: object
info:
  contact:
    email: onesafe@163.com
  description: This is a doc describe API of License Manager
  license: {}
  title: License Manager API
  version: "0.1"
paths:
  /daslicense:
    post:
      consumes:
      - application/json
      description: Generate Das License
      parameters:
      - description: Das license
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/views.DasLicense'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
            type: object
      summary: Generate Das License
  /licenses:
    get:
      consumes:
      - application/json
      description: Get all licenses
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
            type: object
      summary: Get all licenses
  /licenses/upload:
    post:
      consumes:
      - multipart/form-data
      description: Upload License File
      parameters:
      - description: license file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
            type: object
      summary: Upload License File
  /rsakeys:
    get:
      consumes:
      - application/json
      description: Generate rsa keys
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
            type: object
      summary: Generate rsa keys
swagger: "2.0"
